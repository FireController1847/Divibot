// <auto-generated />
using Divibot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Divibot.Migrations
{
    [DbContext(typeof(DivibotDbContext))]
    [Migration("20211101062831_Attacks")]
    partial class Attacks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Divibot.Database.Entities.EntityAfkUser", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("AfkUsers");
                });

            modelBuilder.Entity("Divibot.Database.Entities.EntityAttackTypeChance", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("AttackCategory")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("AttackTypeId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<byte>("Chance")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.Property<byte>("CritChance")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.Property<byte>("IneffChance")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.HasKey("UserId", "AttackCategory", "AttackTypeId");

                    b.ToTable("AttackTypeChances");
                });

            modelBuilder.Entity("Divibot.Database.Entities.EntityAttackUser", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Class")
                        .HasColumnType("longtext");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("AttackUsers");
                });

            modelBuilder.Entity("Divibot.Database.Entities.EntityCustomAttackCategoryChance", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Category")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<byte>("ChanceMax")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.Property<byte>("ChanceMin")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.HasKey("UserId", "Category");

                    b.ToTable("CustomAttackCategoryChances");
                });

            modelBuilder.Entity("Divibot.Database.Entities.EntityCustomAttackModifierChance", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Modifier")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<byte>("ChanceMax")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.Property<byte>("ChanceMin")
                        .HasColumnType("TINYINT UNSIGNED");

                    b.HasKey("UserId", "Modifier");

                    b.ToTable("CustomAttackModifierChances");
                });

            modelBuilder.Entity("Divibot.Database.Entities.EntityVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Commands")
                        .HasColumnType("int");

                    b.Property<int>("Launches")
                        .HasColumnType("int");

                    b.Property<int>("MajorVersion")
                        .HasColumnType("int");

                    b.Property<int>("MinorVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
